#!/usr/bin/env bash
###############################################################################
# cabal-packages
#
# Download and install cabal / haskell packages.
###############################################################################

# Bash 'Strict Mode'
# https://github.com/alphabetum/bash-boilerplate#bash-strict-mode
set -o nounset
set -o errexit
set -o pipefail
IFS="$(printf '\n\t')"

###############################################################################
# Update Config Files
###############################################################################

# The cabal configuration files are included as templates since the $HOME
# paths have to be absolute paths and, therefore, end up containin
# user-specific information.
#
# This function takes the template files and replaces any instances of the
# string {{$HOME}} with the value of the $HOME environment variable.
_update_cabal_config_from_templates() {
  local cabal_dir="$DOTSPATH/home/.cabal"
  local config_files=( config config.platform )

  for file in "${config_files[@]}"
  do
    # if the template file exists
    if [[ -f "$cabal_dir"/"$file".template ]]; then
      # Remove current if present
      if [[ -f "$cabal_dir/$file" ]]; then
        rm "$cabal_dir/$file"
      fi
      # copy the template to the original file's location
      cp "$cabal_dir"/"$file".template "$cabal_dir"/"$file"
      # Replace {{$HOME}} with value of $HOME
      sed -i "s|{{\$HOME}}|$HOME|g" "$cabal_dir"/"$file"
    fi
  done
}

_update_cabal_config_from_templates

###############################################################################
# Update
###############################################################################

# Download the latest package list from hackage.haskell.org
cabal update

###############################################################################
# Packages
###############################################################################

# cabalg
#
# cabalg is an alias for installing cabal package from a git source repository.
#
# https://hackage.haskell.org/package/cabalg
# https://github.com/dmalikov/cabalg
cabal install cabalg

# ghc-mod
#
# The ghc-mod command is a backend command to enrich Haskell programming on
# editors including Emacs, Vim, and Sublime. The ghc-mod command is based on
# ghc-mod library which is a wrapper of GHC API. This package includes the
# ghc-mod command, the ghc-mod library, and Emacs front-end (for historical
# reasons)
#
# http://www.mew.org/~kazu/proj/ghc-mod/en/
# https://hackage.haskell.org/package/ghc-mod
# https://github.com/kazu-yamamoto/ghc-mod
cabal install ghc-mod

# hdevtools
#
# Persistent GHC powered background server for FAST Haskell development tools
#
# https://github.com/bitc/hdevtools
cabal install hdevtools

# HLint
#
# HLint is a tool for suggesting possible improvements to Haskell code. These
# suggestions include ideas such as using alternative functions, simplifying
# code and spotting redundancies. You can try HLint online at lpaste.net
#
# https://github.com/ndmitchell/hlint
cabal install hlint

# record
#
# An API of just two quasi-quoters, providing a full-scale solution to the
# notorious records problem of Haskell.
#
# http://hackage.haskell.org/package/record
# https://github.com/nikita-volkov/record
# http://nikita-volkov.github.io/record/
cabal install record
