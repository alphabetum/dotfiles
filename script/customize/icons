#!/usr/bin/env bash
###############################################################################
# icons
#
# Swap icons of specified apps with custom icons included in $DOTFILES/vendor
###############################################################################

###############################################################################
# Platform Check
###############################################################################

if [[ ! "$OSTYPE" =~ ^darwin ]]
then
  printf "icons is only supported on OS X.\nSkipping...\n"
  exit 0
fi

###############################################################################
# Base paths and function
###############################################################################

_SOURCE_ICON_DIR="${DOTFILES}/vendor/local/customizations/icons"
_LOCAL_APP_DIR="${HOME}/Applications"

# _swap_icons()
#
# Usage:
#   _swap_icons </source/path> </destination/path>
#
# Description:
#   Append '.bak' to the filename of the item at the destination path, then
#   copy the item at the source path to the destination's non-.bak location.
_swap_icons() {
  local source_path="${1:-}"
  local destination_path="${2:-}"

  if [[ -z "${source_path}" ]]
  then
    printf "No source path provided.\n"
    exit 1
  fi
  if [[ -z "${destination_path}" ]]
  then
    printf "No destination path provided.\n"
    exit 1
  fi

  local source_hash
  local destination_hash

  source_hash="$(md5 -q "$source_path")"
  destination_hash="$(md5 -q "$destination_path")"
  if [[ "$source_hash" == "$destination_hash" ]]
  then
    return 0
  fi

  if [[ -e "${destination_path}.bak" ]]
  then
    printf "Exists: %s\nSkipping...\n" "${destination_path}.bak"
    return 0
  fi

  mv "${destination_path}" "${destination_path}.bak"
  cp "${source_path}" "${destination_path}"

  # touch .app directory to refresh icons
  local destination_directory_path
  destination_directory_path="$(dirname "${destination_path}")"
  touch "${destination_directory_path}/../.."

  cat <<HEREDOC
Updated icon:
  ${source_path} -> ${destination_path}
HEREDOC
}
###############################################################################
# iTerm2
###############################################################################

# _swap_iterm2_icons
#
# Usage:
#   _swap_iterm2_icons
#
# Description:
#   Swap icons for homebrew cask-installed iterm2.
#
#   NOTE: in the current (2015/10) nightly, the icon is in a different location
#   from the current release version
_swap_iterm2_icons() {
  local _nightly_icon_path="${_LOCAL_APP_DIR}/iTerm.app/Contents/Resources/AppIcon.icns"
  if [[ -e "${_nightly_icon_path}" ]]
  then
    _swap_icons \
      "${_SOURCE_ICON_DIR}/iTerm2.icns" \
      "${_nightly_icon_path}"
  else
    _swap_icons \
      "${_SOURCE_ICON_DIR}/iTerm2.icns" \
      "${_LOCAL_APP_DIR}/iTerm.app/Contents/Resources/iTerm.icns"
  fi
}
_swap_iterm2_icons

###############################################################################
# Macvim
###############################################################################

# _swap_macvim_icons
#
# Usage:
#   _swap_macvim_icons
#
# Description:
#   Swap icons for homebrew-installed MacVim.
_swap_macvim_icons() {
  _swap_icons \
    "${_SOURCE_ICON_DIR}/MacVim.icns" \
    "${_LOCAL_APP_DIR}/MacVim.app/Contents/Resources/MacVim.icns"
  _swap_icons \
    "${_SOURCE_ICON_DIR}/MacVim.icns" \
    "${_LOCAL_APP_DIR}/MacVim.app/Contents/Resources/MacVim-generic.icns"
}
_swap_macvim_icons
