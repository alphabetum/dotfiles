#==============================================================================
# Shell prompt settings.
#
# Display the working directory in the prompt, truncated with a leading "..."
# when it reaches the character limit. Preseve ~ when in home directory.
# host:~/dirname user$ if ab_path_minus_Users/username < char limit
# host:up_to_23_chars_of_ab_path_minus_Users/username user$ if > char limit
# without color: '\h:\w \u$ '
# http://tldp.org/HOWTO/Bash-Prompt-HOWTO/
###############################################################################

function trim_prompt_path () {
  echo "$(echo -n $PWD | sed -e "s/.*\(.\{$1\}\)/\1/")"
}

function pwd_path_length () {
  echo "$(echo -n $PWD | wc -c | tr -d " ")"
}

function pwd_user_path_length () {
  echo "$(echo -n $PWD | egrep -o /Users/$(id -un) | wc -c | tr -d " ")"
}

function build_prompt_path () {

  local path_colors=$1
  local ps1_truncation=$2
  local ps1_pwd_path=""

  local total_path_length=$(pwd_path_length)
  local user_path_length=$(pwd_user_path_length)
  let home_pwd_length=$total_path_length-$user_path_length;

  # Maximum number of characters from the $PWD that should be kept.
  local max_pwd_length=23

  if [ $total_path_length -lt $max_pwd_length ]; then
    # Path is shorter than max.
    # Example:
    # - /bin/
    ps1_pwd_path="$path_colors\w "
  elif [[ $user_path_length -gt 0 && $home_pwd_length -gt $max_pwd_length ]]; then
    # In home, $PWD minus $HOME is longer than max.
    # Example:
    # - /Users/name/Library/Application Support
    # Becomes:
    # - ~...brary/Application Support
    new_pwd=$(trim_prompt_path $max_pwd_length)
    ps1_pwd_path="$path_colors~$ps1_truncation$path_colors$new_pwd "
  elif [ $user_path_length -gt 0 ]; then
    # in home, $PWD minus $HOME is less than max, but $PWD is longer than max.
    # Example:
    # - /Users/name/Library
    # Becomes:
    # - ~/Library
    new_pwd=$(trim_prompt_path $home_pwd_length)
    ps1_pwd_path="$path_colors~/$new_pwd "
  else
    # Not in home and $PWD is longer than max.
    # Example:
    # - /usr/local/lib/ocaml/ocamldoc
    # Becomes:
    # - ...ocal/lib/ocaml/ocamldoc
    new_pwd=$(trim_prompt_path $max_pwd_length)
    ps1_pwd_path="$ps1_truncation$path_colors$new_pwd "
  fi

  echo "$ps1_pwd_path"
}


function prompt_command () {

  # colors
  local fg_black="30"
  local fg_red="31"
  local fg_green="32"
  local fg_yellow="33"
  local fg_blue="34"
  local fg_purple="35"
  local fg_cyan="36"
  local fg_white="37"

  local bg_black="40"
  local bg_red="41"
  local bg_green="42"
  local bg_yellow="43"
  local bg_blue="44"
  local bg_purple="45"
  local bg_cyan="46"
  local bg_white="47"

  # color sequences
  local bg_purple_fg_black="\[\033[$bg_purple;$fg_black%m\]"  # \[\033[45;30m\]
  local bg_fg_blue_fg_black="\[\033[$bg_blue%m\]"             # \[\033[0;7;34m\]
  local bg_black_fg_green="\[\033[0;$fg_green%m\]"            # \[\033[0;0;32m\]
  local bg_black_fg_blue="\[\033[0;$fg_blue%m\]"              # \[\033[0;0;34m\]
  local bg_black_fg_white="\[\033[0;$fg_white%m\]"            # \[\033[0;0;37m\]
  local bg_black_fg_red_underline="\[\033[4;$fg_red%m\]"      # \[\033[0;4;31m\]
  local reset_colors="\[\033[0m\]"

  # Section colors
  local prefix_colors=$bg_purple_fg_black
  local user_colors=$bg_fg_blue_fg_black
  local at_colors=$bg_black_fg_green
  local host_colors=$bg_black_fg_blue
  local path_colors=$bg_black_fg_white
  local truncation_colors=$bg_black_fg_red_underline
  local prompt_colors=$bg_black_fg_green
  local suffix_colors=$reset_colors

  # Section sequences
  local ps1_prefix="$prefix_colors "
  local ps1_user="$user_colors\u"
  local ps1_at="$at_colors@"
  local ps1_host="$host_colors[\h]:"
  local ps1_truncation="$truncation_colors..."
  local ps1_prompt="$prompt_colors\$"
  local ps1_suffix="$suffix_colors "

  # Primary sections
  local ps1_start=$ps1_prefix$ps1_user$ps1_at$ps1_host
  local ps1_pwd_path=$(build_prompt_path $path_colors $ps1_truncation)
  local ps1_end=$(vcprompt)$ps1_prompt$ps1_suffix

  # Combined primary sections
  export PS1=$ps1_start$ps1_pwd_path$ps1_end
}


PROMPT_COMMAND=prompt_command
export PROMPT_COMMAND

