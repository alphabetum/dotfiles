#!/usr/bin/env bash
#########################################################################
# ip - a bask extension script
#
# Add this script and bask to your $PATH. For usage information, run:
# ip help
#########################################################################

source "$(which bask)"

_IPINFOIO_RESPONSE=

# ------------------------------------------------------------------------ info

desc info <<EOM
Usage:
  $_ME info <ip address>

Description:
  Display information about an IP address.
EOM
info() {
  if [[ -z "${1:-}" ]]; then
    _die printf "No IP address supplied.\n"
  fi
  local ip_address="$1"

  # whois
  # =====
  printf "\
# =============================================================================
# whois %s
# =============================================================================
" "$ip_address"
  whois "$ip_address" || true

  # host
  # ====
  printf "\
# =============================================================================
# host %s
# =============================================================================
" "$ip_address"
  host "$ip_address" || true

  # dig
  # ===
  printf "\
# =============================================================================
# dig %s
# =============================================================================
" "$ip_address"
  dig "$ip_address" || true

  # ipinfo.io
  # ===
  printf "\
# =============================================================================
# ipinfo.io/%s
# =============================================================================
" "$ip_address"
  $_ME infoio "$ip_address"

  # links
  # ======
  printf "\
# =============================================================================
# Links
# =============================================================================
"
  $_ME links "$ip_address"
}

# ---------------------------------------------------------------------- infoio

desc infoio <<EOM
Usage:
  $_ME infoio <ip>

Description:
  Query the ipinfo.io API for JSON-formatted info about the given ip address.
EOM
infoio() {
  if [[ -z "${1:-}" ]]; then
    _die printf "No IP address supplied.\n"
  fi
  # Cache response to avoid calling API multiple times.
  if _blank "$_IPINFOIO_RESPONSE"; then
    _debug printf "infoio(): querying API."
    local _ipinfoio
    _ipinfoio="$(curl -s "http://ipinfo.io/${1}/json")"
    _IPINFOIO_RESPONSE="$(printf "%s" "$_ipinfoio")"
  fi
  # Print with trailing newline.
  printf "%s\n" "$_IPINFOIO_RESPONSE"
}

# ----------------------------------------------------------------------- links

desc links <<EOM
Usage:
  $_ME links <ip>

Description:
  Print links that can be used to view additional information for this address.
EOM
links() {
  if [[ -z "${1:-}" ]]; then
    _die printf "No IP address supplied.\n"
  fi

  printf "\
https://www.maxmind.com/en/geoip-demo
http://www.infosniper.net/index.php?ip_address=%s
http://ipinfo.io/%s
" "$1" "$1"
}

# ---------------------------------------------------------------------- locate

desc locate <<EOM
Usage:
  $_ME locate <ip>

Description:
  Print location information about the ip address.
EOM
locate() {
  if [[ -z "${1:-}" ]]; then
    _die printf "No IP address supplied.\n"
  fi

  _infoio_json="$(infoio "$1")"

  printf "%s\n" "$_infoio_json" | jq .loc      | sed 's/\"//g'
  printf "%s\n" "$_infoio_json" | jq .country  | sed 's/\"//g'
  printf "%s\n" "$_infoio_json" | jq .region   | sed 's/\"//g'
  printf "%s\n" "$_infoio_json" | jq .city     | sed 's/\"//g'
  printf "%s\n" "$_infoio_json" | jq .postal   | sed 's/\"//g'
}

# -------------------------------------------------------------------------- me

desc me <<EOM
Usage:
  $_ME me [--local|--remote]

Description:
  Returns the the current IP address by calling \`my ip\` with the supplied
  arguments.
EOM
me() {
  my ip "$@"
}

_main
