#!/usr/bin/env bash
###############################################################################
# rubocop wrapper
#
# Supresses versioning warning from the parser gem.
#
# Version incompatibilities cause the parser gem to sometimes emit a warning
# with rubocop and syntastic. Since reports indicate that this happens
# frequently, this wrapper removes the problematic warning.
#
# Projects involved:
# - https://github.com/whitequark/parser
# - https://github.com/bbatsov/rubocop
# - https://github.com/scrooloose/syntastic
# Related issues:
# - https://github.com/scrooloose/syntastic/issues/1418
# - https://github.com/bbatsov/rubocop/issues/1819
# - https://github.com/scrooloose/syntastic/wiki/Ruby%3A---rubocop
# - https://gist.github.com/lcd047/96138909015f2f8d2d36
###############################################################################

###############################################################################
# Strict Mode
###############################################################################

set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'

###############################################################################
# Program
###############################################################################

# __unwrap_rubocop()
#
# Usage:
#   __unwrap_rubocop
#
# Description:
#   Return the next `rubocop` in the `$PATH` that isn't this one.
__unwrap_rubocop() {
  local _rubocops=($(which -a rubocop))
  local _other_rubocop=
  for _element in "${_rubocops[@]}"
  do
    if [[ ! "$_element" == "$BASH_SOURCE" ]]
    then
      if [[ -z "$_other_rubocop" ]]
      then
        _other_rubocop="$_element"
      fi
    fi
  done
  printf "%s\n" "$_other_rubocop"
}

__unwrapped_rubocop=$(__unwrap_rubocop)

# Exit if no other rubocop executable is found.
if [[ -z "${__unwrapped_rubocop:-}" ]]
then
  printf "rubocop not found.\n"
  exit 1
fi

# If "--version" is passed as the first argument, return the version without
# the unwanted warnings.
if [ $# -eq 1 -a "${1:-}" = --version ]
then
  "$__unwrapped_rubocop" "$@" 2>&1 | \
    sed '/warning: parser\/current is loading parser\/ruby[0-9]*, which recognizes/d;
         /warning: [0-9.]*-compliant syntax, but you are running [0-9.]/d'
else
  exec "$__unwrapped_rubocop" "$@"
fi
