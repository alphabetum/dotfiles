#!/usr/bin/env bash
#########################################################################
# my - a bask extension script
#
# Add this script and bask to your $PATH. For usage information, run:
# my help
#########################################################################

source "$(which bask)"

# ------------------------------------------------------------------------- ip

desc "ip" <<EOM
Usage:
  $_ME ip [--local | --remote]

Options:
  --local   Display the local IP address.
  --remote  Display the remote IP address (default).

Description:
  Print the current IP address. By default, the remote IP address is queried
  and displayed, or the '--local' option can be used to return the local IP
  address.

Wrapped Commands:
           dig +short myip.opendns.com @resolver1.opendns.com
  --local  (see program source)
EOM
ip() {
  # Only the '--local' option is actually checked. The '--remote' option is the
  # default behavior when no option is passed, but the option is included for
  # psychological balance. :-)
  if [[ "$1" == "--local" ]]
  then
    local _active_interface
    _active_interface="$(
      ifconfig | \
        pcregrep \
          -M \
          -o '^[^\t:]+:([^\n]|\n\t)*status: active' | \
      egrep \
        -o \
        -m 1 \
        '^[^\t:]+'
    )"
    _debug printf "ip() \$_active_interface: %s\n" "$_active_interface"
    ipconfig getifaddr "$_active_interface"
  else
    dig +short myip.opendns.com @resolver1.opendns.com
  fi
}

# ---------------------------------------------------------------------- logins

desc "logins" <<EOM
Usage:
  $_ME logins [--history]

Options:
  --history  Include login history.

Decription:
  Display current system logins. By default only the currently active logins
  are displayed. Using the '--history' option displays all historical logins.

Wrapped Commands:
             last | head
  --hisotry  last
EOM
logins() {
  if _command_argv_includes "--history"
  then
    last
  else
    last | head
  fi
}

# ----------------------------------------------------------------------- users

desc "users" <<EOM
Usage:
  $_ME users [--all [-l|--long]]

Options:
  --all      List all users, including system users.
  -l --long  Print long output.

Description:
  List local users.

Wrapped Commands:
                    dscl . list /Users | grep -v '^_'
  --all             dscl . list /Users
  --all  -l --long  dscacheutil -q user
EOM
users() {
  if _command_argv_includes "--all"
  then
    if ( \
      _command_argv_includes "-l" || \
      _command_argv_includes "--long"
    )
    then
      dscacheutil -q user
    else
      dscl . list /Users
    fi
  else
    dscl . list /Users | grep -v '^_'
  fi
}

_main
