#!/usr/bin/env bash
#########################################################################
# search - a bask script
#
# Add this script and bask to your $PATH. For usage information, run:
# search help
#########################################################################

source "$(which bask)"

###############################################################################
# Terminal Browser
###############################################################################

_DEFAULT_TERM_BROWSER="w3m"
# _DEFAULT_TERM_BROWSER="elinks"

###############################################################################
# Base URLs
###############################################################################

_GOOGLE_URL="https://www.google.com/search?q="
_BING_URL="https://www.bing.com/search?q="
_YAHOO_URL="https://search.yahoo.com/search?p="
_DUCKDUCKGO_URL="https://www.duckduckgo.com/?q="
_YANDEX_URL="https://yandex.ru/yandsearch?text="

###############################################################################
# Functions
###############################################################################

# _get_open_cmd()
#
# Usage:
#   _get_open_cmd
#
# Description:
#   Print the open command, given the current environment.
_get_open_cmd() {
  local open_cmd=
  if ( \
    [[ -n "$_DEFAULT_TERM_BROWSER" ]] && \
    _command_exists "$_DEFAULT_TERM_BROWSER"
  ); then
    open_cmd="$_DEFAULT_TERM_BROWSER"
  else
    case "$OSTYPE" in
      darwin*)  open_cmd="open" ;;
      cygwin*)  open_cmd="cygstart" ;;
      linux*)   open_cmd="xdg-open" ;;
      *)        echo "Platform $OSTYPE not supported"
                return 1
                ;;
    esac
  fi
  printf "%s" "$open_cmd"
}

# _join_query()
#
# Usage:
#   _join_query <query>
_join_query() {
  local _joined_query
  _joined_query="$(_join "+" "$@")"
  printf "%s\n" "$_joined_query"
}

# __search()
#
# Usage:
#   __search <base url> [<query>]
__search() {
  local open_cmd
  local base_url
  local joined_query
  local search_url

  open_cmd="$(_get_open_cmd)"
  base_url="$1"

  if [[ -z "${2:-}" ]]; then
    search_url="$(printf "%s\n" "$base_url" | sed "s_[^/]*\$__" )"
  else
    joined_query="$(_join_query "${@:2}")"
    search_url="${base_url}${joined_query}"
  fi

  if [[ ! "$open_cmd" == "$_DEFAULT_TERM_BROWSER" ]]; then
   "$open_cmd" "${search_url}" &>/dev/null
  else
    "$open_cmd" "${search_url}"
  fi
}

###############################################################################
# Search Engines
###############################################################################

# ------------------------------------------------------------------------ bing

desc "bing" <<EOM
Usage:
  $_ME bing [<query>]

Description:
  Search with Bing.
EOM
bing() {
  __search "$_BING_URL" "$@"
}

# ------------------------------------------------------------------------- ddg

desc "ddg" <<EOM
Usage:
  $_ME ddg [<query>]

Description:
  Search with DuckDuckGo.
EOM
ddg() {
  __search "$_DUCKDUCKGO_URL" "$@"
}

# ---------------------------------------------------------------------- google

desc "google" <<EOM
Usage:
  $_ME google [<query>]

Description:
  Search with Google.
EOM
google() {
  __search "$_GOOGLE_URL" "$@"
}

# ----------------------------------------------------------------------- yahoo

desc "yahoo" <<EOM
Usage:
  $_ME yahoo [<query>]

Description:
  Search with Yahoo!
EOM
yahoo() {
  __search "$_YAHOO_URL" "$@"
}


# ---------------------------------------------------------------------- yandex

desc "yandex" <<EOM
Usage:
  $_ME yandex [<query>]

Description:
  Search with Yandex.
EOM
yandex() {
  __search "$_YANDEX_URL" "$@"
}

###############################################################################
# DuckDuckGo !bang Searches
###############################################################################

# ----------------------------------------------------------------------- ducky

desc "ducky" <<EOM
Usage:
  $_ME ducky [<query>]

Description:
  I feel ducky.
EOM
ducky() {
  __search "$_DUCKDUCKGO_URL" "\\! ${*}"
}

# ------------------------------------------------------------------ graphemica

desc "graphemica" <<EOM
Usage:
  $_ME graphemica [<query>]

Description:
  Search Graphemica, for people who â™¥ letters, numbers, punctuation, &c.
EOM
graphemica() {
  __search "$_DUCKDUCKGO_URL" "\\!graphemica ${*}"
}

# ----------------------------------------------------------------------- image

desc "image" <<EOM
Usage:
  $_ME image [<query>]

Description:
  Search Google Images.
EOM
image() {
  __search "$_DUCKDUCKGO_URL" "\\!i ${*}"
}

# ------------------------------------------------------------------------- map

desc "map" <<EOM
Usage:
  $_ME map [<query>]

Description:
  Search Google Maps.
EOM
map() {
  __search "$_DUCKDUCKGO_URL" "\\!m ${*}"
}

# ------------------------------------------------------------------------ news

desc "news" <<EOM
Usage:
  $_ME news [<query>]

Description:
  Search Google News.
EOM
wiki() {
  __search "$_DUCKDUCKGO_URL" "\\!n ${*}"
}

# --------------------------------------------------------------------- youtube

desc "youtube" <<EOM
Usage:
  $_ME youtube [<query>]

Description:
  Search YouTube.
EOM
youtube() {
  __search "$_DUCKDUCKGO_URL" "\\!yt ${*}"
}

# ------------------------------------------------------------------------ wiki

desc "wiki" <<EOM
Usage:
  $_ME wiki [<query>]

Description:
  Search Wikipedia.
EOM
wiki() {
  __search "$_DUCKDUCKGO_URL" "\\!w ${*}"
}

_init
