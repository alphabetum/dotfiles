#!/usr/bin/env bash
#
#                       __  __
#  _      _____  ____ _/ /_/ /_  ___  _____
# | | /| / / _ \/ __ `/ __/ __ \/ _ \/ ___/
# | |/ |/ /  __/ /_/ / /_/ / / /  __/ /
# |__/|__/\___/\__,_/\__/_/ /_/\___/_/
#
# Print weather information from Wunderground or wttr.in.
#
# Usage:
#   weather [-a] [<query>]
#
# Options:
#   -a --all  Print information from all services.
#
# Arguments:
#   <query>  A postal code or city name.
#
# Description:
#   Print weather information from Wunderground or wttr.in.
#
# Other weather data sources and command links:
# - http://graphical.weather.gov/xml/
# - http://forecast.weather.gov/MapClick.php?lat=34.44033172283184&lon=-119.7352482503058&site=all&smap=1
#   - http://forecast.weather.gov/MapClick.php?lat=34.4403&lon=-119.7352&unit=0&lg=english&FcstType=dwml
# - https://github.com/schachmat/wego/

_help() {
  cat <<HEREDOC
                      __  __
 _      _____  ____ _/ /_/ /_  ___  _____
| | /| / / _ \\/ __ \`/ __/ __ \\/ _ \\/ ___/
| |/ |/ /  __/ /_/ / /_/ / / /  __/ /
|__/|__/\\___/\\__,_/\\__/_/ /_/\\___/_/

Usage:
  weather [-a] [<query>]

Options:
  -a --all  Print information from all services.

Arguments:
  <query>  A postal code or city name [default: 93105].

Description:
  Print weather information from Wunderground or wttr.in.
HEREDOC
}

# _hr()
#
# Usage:
#   _hr
#
# Description:
#   Print a horizontal line with a length matching the width of the terminal.
_hr() {
  printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
}

_weather() {
  local _arguments=()
  local _query="93105"
  local _print_help=0
  local _service="wunderground"

  for __arg in "$@"
  do
    case "${__arg}" in
      -h|--help)
        _print_help=1
        ;;
      -g|--graph|-c|--chart|-l|--long|wttrin|wttr.in)
        _service="wttr.in"
        ;;
      -a|--all)
        _service="all"
        ;;
      *)
        _arguments+=($__arg)
        ;;
    esac
  done

  if [[ -n "${_arguments[*]:-}" ]]
  then
    _query="${_arguments[*]}"
  fi

  if ((_print_help))
  then
    _help && exit 0
  elif [[ "${_service}" == "wttr.in" ]]
  then
    _wttrin "${_query:-}"
  elif [[ "${_service}" == "all" ]]
  then
    printf "%s\n" "wttr.in:"
    printf "%s\n" "--------"
    _wttrin "${_query:-}"
    _hr
    printf "%s\n" "wunderground:"
    printf "%s\n" "-------------"
    _wunderground "${_query:-}"
  else
    _wunderground "${_query:-}"
  fi
}

_wttrin() {
  local _query="${1}"
  curl "http://wttr.in/${_query}"
}

_wunderground() {
  local _query="${1}"

  curl -s \
    "http://api.wunderground.com/auto/wui/geo/ForecastXML/index.xml?query=${_query}" \
    | perl -ne 's/&amp;deg;/Â°/g;/<title>([^<]+)/&&printf "%s: ",$1;/<fcttext>([^<]+)/&&print $1,"\n"'
}

_weather "$@"
