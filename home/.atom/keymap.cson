# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

# vim-mode-visual-block keymappings
#
# As of vim-mode-visual-block@0.2.4 there are no default keymappings and
# therefore must be created manually.
#
# https://atom.io/packages/vim-mode-visual-block
# https://github.com/t9md/atom-vim-mode-visual-block
'atom-text-editor.vim-mode.visual-mode':
  'j':      'vim-mode-visual-block:j'
  'down':   'vim-mode-visual-block:j'
  'k':      'vim-mode-visual-block:k'
  'up':     'vim-mode-visual-block:k'
  # Disable h and l. Setting these causes these key to do nothing.
  # 'h':      'vim-mode-visual-block:h'
  # 'left':   'vim-mode-visual-block:h'
  # 'l':      'vim-mode-visual-block:l'
  # 'right':  'vim-mode-visual-block:l'
  'I':      'vim-mode-visual-block:I'
  'A':      'vim-mode-visual-block:A'
  'D':      'vim-mode-visual-block:D'
  'C':      'vim-mode-visual-block:C'
  'o':      'vim-mode-visual-block:o'
  'escape': 'vim-mode-visual-block:escape'
  'ctrl-[': 'vim-mode-visual-block:escape'
  'ctrl-c': 'vim-mode-visual-block:escape'
  'ctrl-v': 'vim-mode:activate-blockwise-visual-mode'
  # For unknown reasons, the 'delete' key doesn't delete the selection in
  # visual-mode. Assigning 'backspace' seems to provide the expected
  # behavior.
  'backspace': 'vim-mode:delete-left'
