###############################################################################
# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
#
# References:
#   https://github.com/atom/atom/tree/master/keymaps
#   https://atom.io/docs/latest/behind-atom-keymaps-in-depth
###############################################################################

###############################################################################
# map ctrl-up / ctrl-down to line movement.
#
# This mirrors the current vim configuration.
#
# The existing keymappings for these operations are ctrl-cmd-up / ctrl-cmd-down
###############################################################################
'body':
  'ctrl-alt-up': 'editor:move-line-up'
  'ctrl-alt-down': 'editor:move-line-down'

###############################################################################
# map ', t t b' to symbols-tree-view toggle.
#
# symbols-tree-view is an atom analogue to tagbar in vim. In the current
# configuration, tabbar in vim is mapped to `nmap <leader>ttb`, with <leader>
# mapped to comma. This atom mapping mirrors that from vim.
#
# https://github.com/xndcn/symbols-tree-view
#
# NOTE: the default  mapping is to ctrl-alt-o
###############################################################################
'atom-workspace .vim-mode:not(.insert-mode), atom-workspace .vim-mode-plus:not(.insert-mode)':
  ', t t b': 'symbols-tree-view:toggle'

###############################################################################
# minimap mappings.
#
# https://github.com/atom-minimap/minimap
###############################################################################
'atom-text-editor.vim-mode:not(.insert-mode), atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # vim-like mapping to `<leader>m`, with comma as <leader>.
  ', m': 'minimap:toggle'
  # This mapping is the suggested mapping in the minimap package's
  # mimimap.cson, but it is commented out and therefore disabled by default.
  'ctrl-k ctrl-m': 'minimap:toggle'

###############################################################################
# vim-mode-plus keymappings
#
# As of vim-mode-visual-block@0.2.4 there are no default keymappings and
# therefore must be created manually.
#
# https://atom.io/packages/vim-mode-plus
# https://github.com/t9md/atom-vim-mode-plus
# https://github.com/t9md/atom-vim-mode-plus/blob/master/keymaps/vim-mode-plus.cson
###############################################################################
'atom-text-editor.vim-mode-plus.visual-mode':
  # For unknown reasons, the 'delete' key doesn't delete the selection in
  # visual-mode. Assigning 'backspace' seems to provide the expected
  # behavior.
  'backspace': 'vim-mode-plus:delete-left'

'atom-text-editor.vim-mode-plus.visual-mode.blockwise':
  # Add up and down key mappings to suppliment j and k in block mode.
  'down': 'vim-mode-plus:blockwise-move-down'
  'up':   'vim-mode-plus:blockwise-move-up'

###############################################################################
# vim-mode-visual-block keymappings
#
# As of vim-mode-visual-block@0.2.4 there are no default keymappings and
# therefore must be created manually.
#
# https://atom.io/packages/vim-mode-visual-block
# https://github.com/t9md/atom-vim-mode-visual-block
###############################################################################
'atom-text-editor.vim-mode.visual-mode':
  'j':      'vim-mode-visual-block:j'
  'down':   'vim-mode-visual-block:j'
  'k':      'vim-mode-visual-block:k'
  'up':     'vim-mode-visual-block:k'
  # Disable h and l. Setting these causes these keys to do nothing.
  # 'h':      'vim-mode-visual-block:h'
  # 'left':   'vim-mode-visual-block:h'
  # 'l':      'vim-mode-visual-block:l'
  # 'right':  'vim-mode-visual-block:l'
  'I':      'vim-mode-visual-block:I'
  'A':      'vim-mode-visual-block:A'
  'D':      'vim-mode-visual-block:D'
  'C':      'vim-mode-visual-block:C'
  'o':      'vim-mode-visual-block:o'
  'escape': 'vim-mode-visual-block:escape'
  'ctrl-[': 'vim-mode-visual-block:escape'
  'ctrl-c': 'vim-mode-visual-block:escape'
  'ctrl-v': 'vim-mode:activate-blockwise-visual-mode'
  # For unknown reasons, the 'delete' key doesn't delete the selection in
  # visual-mode. Assigning 'backspace' seems to provide the expected
  # behavior.
  'backspace': 'vim-mode:delete-left'

###############################################################################
# tree-view mappings.
#
# https://github.com/atom/tree-view/blob/master/keymaps/tree-view.cson
###############################################################################

# Map to ', n', which reflects the mapping for nerdtree toggling in the current
# vim configuration.
'.vim-mode:not(.insert-mode), .vim-mode-plus:not(.insert-mode)':
  ', n': 'tree-view:toggle'

###############################################################################
# jumpy mappings.
#
# Include all jumpy mappings since the defaults are disabled in the config in
# order to be customized.
#
# https://github.com/DavidLGoldberg/jumpy/blob/master/keymaps/jumpy.cson
###############################################################################

# Use control-enter rather than shift-enter, since shift-enter is frequently
# accidentally triggered.
'atom-workspace atom-text-editor:not(.mini)':
  'ctrl-enter': 'jumpy:toggle'

'atom-workspace atom-text-editor.jumpy-jump-mode':
  'backspace': 'jumpy:reset'
  'enter': 'jumpy:clear'
  'space': 'jumpy:clear'
  'escape': 'jumpy:clear'
  'shift-enter': 'jumpy:clear'
  'a': 'jumpy:a'
  'b': 'jumpy:b'
  'c': 'jumpy:c'
  'd': 'jumpy:d'
  'e': 'jumpy:e'
  'f': 'jumpy:f'
  'g': 'jumpy:g'
  'h': 'jumpy:h'
  'i': 'jumpy:i'
  'j': 'jumpy:j'
  'k': 'jumpy:k'
  'l': 'jumpy:l'
  'm': 'jumpy:m'
  'n': 'jumpy:n'
  'o': 'jumpy:o'
  'p': 'jumpy:p'
  'q': 'jumpy:q'
  'r': 'jumpy:r'
  's': 'jumpy:s'
  't': 'jumpy:t'
  'u': 'jumpy:u'
  'v': 'jumpy:v'
  'w': 'jumpy:w'
  'x': 'jumpy:x'
  'y': 'jumpy:y'
  'z': 'jumpy:z'
  'A': 'jumpy:A'
  'B': 'jumpy:B'
  'C': 'jumpy:C'
  'D': 'jumpy:D'
  'E': 'jumpy:E'
  'F': 'jumpy:F'
  'G': 'jumpy:G'
  'H': 'jumpy:H'
  'I': 'jumpy:I'
  'J': 'jumpy:J'
  'K': 'jumpy:K'
  'L': 'jumpy:L'
  'M': 'jumpy:M'
  'N': 'jumpy:N'
  'O': 'jumpy:O'
  'P': 'jumpy:P'
  'Q': 'jumpy:Q'
  'R': 'jumpy:R'
  'S': 'jumpy:S'
  'T': 'jumpy:T'
  'U': 'jumpy:U'
  'V': 'jumpy:V'
  'W': 'jumpy:W'
  'X': 'jumpy:X'
  'Y': 'jumpy:Y'
  'Z': 'jumpy:Z'
