###############################################################################
# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
#
# References:
#   https://github.com/atom/atom/tree/master/keymaps
#   https://atom.io/docs/latest/behind-atom-keymaps-in-depth
###############################################################################

###############################################################################
# map ctrl-up / ctrl-down to line movement.
#
# This mirrors the current vim configuration.
#
# The existing keymappings for these operations are ctrl-cmd-up / ctrl-cmd-down
###############################################################################
'body':
  'ctrl-up': 'editor:move-line-up'
  'ctrl-down': 'editor:move-line-down'

###############################################################################
# map ', t t b' to symbols-tree-view toggle.
#
# symbols-tree-view is an atom analogue to tagbar in vim. In the current
# configuration, tabbar in vim is mapped to `nmap <leader>ttb`, with <leader>
# mapped to comma. This atom mapping mirrors that from vim.
#
# https://github.com/xndcn/symbols-tree-view
#
# NOTE: the default  mapping is to ctrl-alt-o
###############################################################################
'atom-text-editor.vim-mode.normal-mode':
  ', t t b': 'symbols-tree-view:toggle'

###############################################################################
# minimap mappings.
#
# https://github.com/atom-minimap/minimap
###############################################################################
'.atom-workspace':
  # vim-like mapping to `<leader>m`, with comma as <leader>.
  ', m': 'minimap:toggle'
  # This mapping is the suggested mapping in the minimap package's
  # mimimap.cson, but it is commented out and therefore disabled by default.
  'ctrl-k ctrl-m': 'minimap:toggle'

###############################################################################
# vim-mode-visual-block keymappings
#
# As of vim-mode-visual-block@0.2.4 there are no default keymappings and
# therefore must be created manually.
#
# https://atom.io/packages/vim-mode-visual-block
# https://github.com/t9md/atom-vim-mode-visual-block
###############################################################################
'atom-text-editor.vim-mode.visual-mode':
  'j':      'vim-mode-visual-block:j'
  'down':   'vim-mode-visual-block:j'
  'k':      'vim-mode-visual-block:k'
  'up':     'vim-mode-visual-block:k'
  # Disable h and l. Setting these causes these keys to do nothing.
  # 'h':      'vim-mode-visual-block:h'
  # 'left':   'vim-mode-visual-block:h'
  # 'l':      'vim-mode-visual-block:l'
  # 'right':  'vim-mode-visual-block:l'
  'I':      'vim-mode-visual-block:I'
  'A':      'vim-mode-visual-block:A'
  'D':      'vim-mode-visual-block:D'
  'C':      'vim-mode-visual-block:C'
  'o':      'vim-mode-visual-block:o'
  'escape': 'vim-mode-visual-block:escape'
  'ctrl-[': 'vim-mode-visual-block:escape'
  'ctrl-c': 'vim-mode-visual-block:escape'
  'ctrl-v': 'vim-mode:activate-blockwise-visual-mode'
  # For unknown reasons, the 'delete' key doesn't delete the selection in
  # visual-mode. Assigning 'backspace' seems to provide the expected
  # behavior.
  'backspace': 'vim-mode:delete-left'

###############################################################################
# tree-view mappings.
#
# https://github.com/atom/tree-view/blob/master/keymaps/tree-view.cson
###############################################################################

# Map to ', n', which reflects the mapping for nerdtree toggling in the current
# vim configuration.
'.platform-darwin, .platform-linux':
  ', n': 'tree-view:toggle'
