###############################################################################
# .ssh/default.sshconfig
#
# Default SSH configuration.
#
# The `generate_ssh_config` shell function concatenates all of the files in
# .ssh/config.d and this file into a .ssh/config file. This process also
# happens transparently every time the `ssh` command is called.
#
# See also: $HOME/.shared_rc.d/ssh.sh
#
# More information: http://superuser.com/q/247564
###############################################################################

Host *
  # Disable Agent Forwarding.
  #
  # SSH agent forwarding allows remote servers to use your local keys on your
  # behalf, which could have security risks.
  #
  # More information:
  # http://blog.lyte.id.au/2012/03/19/ssh-agent-forwarding-is-a-bug/
  # http://heipei.github.io/2015/02/26/SSH-Agent-Forwarding-considered-harmful/
  # http://rabexc.org/posts/pitfalls-of-ssh-agents
  ForwardAgent no

  # Stop offering all public keys to servers.
  #
  # By default, ssh sends all public keys to a server whenever it tries to
  # authenticate. To avoid this behavior, set `PubkeyAuthentication` and
  # `IdentitiesOnly`.
  #
  # More information:
  # https://github.com/FiloSottile/whosthere
  # http://serverfault.com/q/139870
  # https://news.ycombinator.com/item?id=10004678
  #
  # Disable public key authentication by default.
  #
  # Even with `IdentitiesOnly yes`, the default ssh identities are still sent
  # to the server. The default is ~/.ssh/identity for protocol version 1, and
  # some combination (depending on the system) of ~/.ssh/id_dsa,
  # ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519 and ~/.ssh/id_rsa for protocol
  # version 2.
  #
  # Disabling PubkeyAuthentication prevents this, and then
  # PubkeyAuthentication can be reenabled for each host. Example:
  #     Host example.com
  #       PubkeyAuthentication yes
  PubkeyAuthentication no
  # Ignore ssh-agent keys.
  #
  # Host-specific keys can be included in the individual `Host` section. Example:
  #     Host example.com
  #       IdentityFile ~/.ssh/id_example
  IdentitiesOnly yes

  # Automatic IdentityFile selection.
  #
  # Select an IdentityFile automatically based on contextual connection
  # information.
  #
  # SSH keys with the expected format can be generated with the
  # `generate_ssh_key` shell function in .shared_rc/.ssh.sh
  #
  # Follows the formats:
  #   local.host_remote-user@remote.host_id_rsa
  #   local.host_remote.host_id_rsa
  # More info:
  #   http://askubuntu.com/a/423297
  IdentityFile ~/.ssh/%l_%r@%h_id_rsa
  IdentityFile ~/.ssh/%l_%h_id_rsa
